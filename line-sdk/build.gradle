apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

version = "5.4.0"

publish {
    userOrg = 'line'
    groupId = 'com.linecorp.linesdk'
    artifactId = 'linesdk'
    publishVersion = version
    repoName = 'line-sdk'
    uploadName = 'com.linecorp.linesdk'
    desc = 'The LINE SDK for Android provides a modern way of implementing LINE APIs.'
    website = 'https://github.com/line/line-sdk-android'
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 5_04_00
        versionName version

        consumerProguardFiles 'consumer-proguard-rules.pro'

        buildConfigField "String", "LINE_APP_PACKAGE_NAME", "\"jp.naver.line.android\""
        buildConfigField "String", "OPENID_DISCOVERY_DOCUMENT_URL", "\"https://access.line.me/.well-known/openid-configuration\""
        buildConfigField "String", "API_SERVER_BASE_URI", "\"https://api.line.me/\""
        buildConfigField "String", "WEB_LOGIN_PAGE_URL", "\"https://access.line.me/oauth2/v2.1/login\""
    }

    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName = "line-sdk-${defaultConfig.versionName}"
            if (buildType.name == 'debug') {
                fileName += '-debug'
            }
            fileName += '.aar'
            outputFileName = fileName
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
    }
}

configurations {
    doclava
}

dependencies {
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:customtabs:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:exifinterface:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation('com.madgag.spongycastle:prov:1.58.0.0') {
        exclude group: 'junit', module: 'junit'
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.1.2'
    testImplementation 'org.mockito:mockito-core:1.10.19'

    api 'io.jsonwebtoken:jjwt-api:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.10.5'
    implementation ('io.jsonwebtoken:jjwt-orgjson:0.10.5') {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }

    implementation 'com.squareup.picasso:picasso:2.71828'

    // for @hide annotation on functions to hide it from javadoc
    doclava 'com.google.doclava:doclava:1.0.6'
}

ext {
    javadocParams = [
            taskGroup    : "javadoc",
            title        : "LINE SDK v${android.defaultConfig.versionName} for Android",
            locale       : "en_US",
            encoding     : "UTF-8",
            source       : android.sourceSets.main.java.srcDirs,
            classpath    : project.files(android.getBootClasspath().join(File.pathSeparator)),
            destDir      : [
                    public  : new File(project.buildDir, "docs/javadoc_public"),
                    internal: new File(project.buildDir, "docs/javadoc_internal")
            ],
            includes     : [
                    public  : [
                            "**/com/linecorp/linesdk/*.java",
                            "**/com/linecorp/linesdk/api/*.java",
                            "**/com/linecorp/linesdk/auth/*.java",
                            "**/com/linecorp/linesdk/widget/*.java"
                    ],
                    internal: [
                            "**/com/linecorp/linesdk/*.java",
                            "**/com/linecorp/linesdk/api/*.java",
                            "**/com/linecorp/linesdk/auth/*.java",
                            "**/com/linecorp/linesdk/widget/*.java",
                            "**/com/linecorp/linesdk/message/**/*.java"
                    ]
            ],
            externalLinks: [
                    "https://docs.oracle.com/javase/8/docs/api/",
                    "https://developer.android.com/reference/"
            ]
    ]
}

task javadoc_public(type: Javadoc) {
    group javadocParams.taskGroup
    destinationDir = javadocParams.destDir.public

    // doclava doesn't support `title`
    title = null

    source = javadocParams.source
    classpath += javadocParams.classpath
    include javadocParams.includes.public

    failOnError false

    options {
        doclet "com.google.doclava.Doclava"
        docletpath = configurations.doclava.files.asType(List)

        locale javadocParams.locale
        encoding javadocParams.encoding

        // doclava supports `-title ${title}`
        addStringOption("title", "${javadocParams.title}")
        addStringOption("templatedir", "${rootDir}/templates")
        addMultilineMultiValueOption("federate").with {
            javadocParams.externalLinks.each {
                value.add(["name", it])
            }
        }
    }

}

task javadoc_internal(type: Javadoc) {
    group javadocParams.taskGroup
    destinationDir = javadocParams.destDir.internal

    source = javadocParams.source
    classpath += javadocParams.classpath
    include javadocParams.includes.internal

    failOnError false

    options {
        docTitle "${javadocParams.title}"
        windowTitle "${javadocParams.title}"

        locale javadocParams.locale
        encoding javadocParams.encoding

        links = javadocParams.externalLinks
    }
}
